---

- name: Check required var registration_token is set
  fail:
    msg: "registration_token var is not set"
  when: registration_token | length == 0

- name: pip install docker-py
  pip:
    name: docker-py
    state: latest

- name: run GitLab CI runner container
  docker_container:
    name: gitlab-ci-runner
    image: gitlab/gitlab-runner:{{ image_tag }}
    state: started
    detach: true
    restart_policy: always
    volumes:
      - "{{data_volume}}:/etc/gitlab-runner"
      - /var/run/docker.sock:/var/run/docker.sock

- name: unregister any existing runner
  shell: docker exec -t gitlab-ci-runner gitlab-runner unregister --all-runners
  when: unregister_all

- name: register the runner with GitLab
  shell: >
    docker exec --tty
    gitlab-ci-runner
    gitlab-runner register
    --non-interactive
    --url={{ gitlab_url }}
    --registration-token={{ registration_token }}
    --executor=docker
    --docker-image={{ default_image }}
    --name={{ runner_name }}
    --limit={{ limit }}
    --request-concurrency={{ request_concurrency }}
    --tag-list={{ runner_tags }}
    --locked={{ locked_to_project}}
    --run-untagged={{ run_untagged }}
    --docker-privileged
    --docker-disable-cache=false
    --docker-volumes=/var/run/docker.sock:/var/run/docker.sock

- name: set concurrency parameter in gitlab-runner's config.toml
  lineinfile:
    path: "{{data_volume}}/config.toml"
    regexp: "^concurrent ="
    line: "concurrent = {{ concurrent }}"
    owner: root
    group: root
    mode: 0644

- name: list registered runners
  shell: docker exec -t gitlab-ci-runner gitlab-runner list
  register: output

- debug: msg={{ output.stdout_lines }}
